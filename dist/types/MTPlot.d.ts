import { DataPoint, PlotOptions, Theme, PatternDetectionOptions } from './types';
export declare class MTPlot {
    private container;
    private renderer;
    private options;
    private data;
    private trendLine;
    private lowValueDetector;
    private stagnationDetector;
    private isDirty;
    private hoveredBarIndex;
    private updateTimeout;
    private refreshDelay;
    private resizeObserver;
    private tooltip;
    private worker;
    private zoom;
    private clusterData;
    constructor(containerId: string, initialData?: DataPoint[], options?: Partial<PlotOptions>);
    private setupTooltip;
    private setupWebWorker;
    private setupAccessibility;
    private setupResizeHandling;
    private handleResize;
    private getWidth;
    private getHeight;
    private processInitialData;
    private calculateTrendLine;
    private handleKeyboardNavigation;
    private handleWorkerResults;
    private setupEventListeners;
    private getTimeFromX;
    private findClosestPoint;
    private drawTrendLine;
    private render;
    private addData;
    private triggerUpdate;
    private update;
    private calculateValueRange;
    private calculateTimeRange;
    private drawPatterns;
    private drawBars;
    private drawStatistics;
    private getXPosition;
    private scaleY;
    getStatistics(): {
        mean: number;
        median: number;
        movingAverage: number[];
    };
    exportToCSV(): string;
    exportToSVG(): string;
    setTheme(theme: Partial<Theme>): void;
    setPatternOptions(options: Partial<PatternDetectionOptions>): void;
    setOptions(options: Partial<PlotOptions>): void;
}
